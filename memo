자주 쓰는 숫자
4294967295 - 2의 32승 - 1

테스트 방법
1. 일단 2의 32승 진수 표기를 만들자. 그 숫자를 넣을 방법도 만들자.
2. 그리고 그걸로 더하기 테스트
3. 빼기 테스트
4. 곱하기 테스트
5. 나누기 및 나머지 테스트

16진수 - 32 > 8 [ 0 1 2 3 4 5 6 7 8 9 A B C D E F ]
32진수 - 32 > 4 [ 0 1 2 3 4 5 6 7 8 9 A B C D E F G H I J K L N M O P Q R S T U W ]
높이? [ _ , . - ~ w * = ; W + / " ^ ` | ]
밀도? [ ` - = / X n m w N # @ M W ]
 [ □ ▒ ▥ ▨ ▦ ▩ ▣ ■ ◇ ◈ ◆ ○ ◎ ◐ ◑ ● ]
 64진법? [ ○ ① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⒪ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ]
 [ 口 一 二 三 四 五 六 七 八 九 十 土 王 玉 罕 丑 0 1 2 3 4 5 6 7 8 9 A B C D E F ]
 목표가 256진법 이기 때문에.. 16이 16개 있어야 함.

256 진수 [
> 0~63 원 숫자 영역
○①②③④⑤⑥⑦⑧⑨⑩⑪⑫⑬⑭⑮
⑯⑰⑱⑲⑳㉑㉒㉓㉔㉕㉖㉗㉘㉙㉚㉛
㉜㉝㉞㉟㊱㊲㊳㊴㊵㊶㊷㊸㊹㊺㊻㊼
⒪⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂

>64 ~ 127 한자 영역
日㏠㏡㏢㏣㏤㏥㏦㏧㏨㏩㏪㏫㏬㏭㏮
㏯㏰㏱㏲㏳㏴㏵㏶㏷㏸㏹㏺㏻㏼㏽㏾
㍘㍙㍚㍛㍜㍝㍞㍟㍠㍡㍢㍣㍤㍥㍦㍧
零一二三四五六七八九十土王玉罕丑

>128 ~ 211 64궤 영역
䷀䷪䷍䷡䷈䷄䷙䷊䷉䷹䷥䷵䷼䷻䷨䷒
䷌䷰䷝䷶䷤䷾䷕䷣䷘䷐䷔䷲䷩䷂䷚䷗
䷫䷛䷱䷟䷸䷯䷑䷭䷅䷮䷿䷧䷺䷜䷃䷆
䷠䷞䷷䷽䷴䷦䷳䷎䷋䷬䷢䷏䷓䷇䷖䷁

>212 ~ 255 도형 영역
※⒈⒉⒊⒋⒌⒍⒎⒏⒐⒑⒒⒓⒔⒕⒖
▴▵▸▹►▻▶▷𝍠𝍡𝍢𝍣𝍤𝍥𝍦𝍧𝍨
□▒▥▨▦▩▣■◇◈◆○◎◔◐◑◕
●❶❷❸❹❺❻❼❽❾❿⓫⓬⓭⓮⓯
]

            [+○ ○ ○ ② ▦ ⒁ ㏱ ㏱ ]
[+○ ○ ○ ② 𝍤 ⓬ ䷜ ⒋ ○ ○ ○ ○ ]
[+○ ○ ○ ⑨ ○ ○ ○ ○ ○ ○ ○ ○ ]

소수 찾기 방법
1. 현재 찾은 소수들을 사용해 다음 숫자들의 소수 가능성 여부를 알 수 있음
ex> 2, 3, 5
소수는 2를 제외하고는 모두 홀수이므로 2씩 증가 가능.
소수는 3을 제외하고는 모두 3의 배수가 아님으로, 3씩 증가 가능. -> 하지만 홀수 + 홀수는 짝수라서, 6씩 증가가 의미있음
소수는 5를 제외하고는 모두 5의 배수가 아님으로, 5씩 증가 가능. -> 하지만 홀수 + 홀수는 짝수라 10씩 증가가 의미가 있음.
소수는 2, 3을 제외하고는 모두 2와3의 배수가 아니기 때문에 소수 + 6을 하게 된다면, 2, 3의 배수가 아님.

2. 소수의 개수는 무한하고, 그 것들을 다 저장할 수 없기 때문에, 특별한 저장 방식이나, 탐색 방식이 필요함.
4바이트 정수 안의 소수를 모두 저장하려면 0.7GB정도 소요됨.

3. 어떤 자연수N이 소수인지를 알려면 1~floor(sqrt(N))까지의 소수를 알 수 있으면 N이 소수인지 판별가능.
10000 -> 100 이하만 알면됨.

4. 소수의 분포와 다음 소수와의 간격은 실험적 결과로써 1.13 * ln(prime_n)^2

5. 소수가 없는 영역에 대한 정보
1. N! + n (N > n, n != 1) 일때 소수가 아니다. -> 때문에 소수의 간격의 한계는 없다.
